#ifndef __GNET_DBLOADGLOBALCONTROLARG_RPCDATA
#define __GNET_DBLOADGLOBALCONTROLARG_RPCDATA

#include "rpcdefs.h"


namespace GNET
{
	class DBLoadGlobalControlArg : public GNET::Rpc::Data
	{
	public:
		int nouse;

	public:
		DBLoadGlobalControlArg (int l_nouse = 0)
			: nouse(l_nouse)
		{
		}

		DBLoadGlobalControlArg(const DBLoadGlobalControlArg &rhs)
			: nouse(rhs.nouse) { }

		Rpc::Data *Clone() const { return new DBLoadGlobalControlArg(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const DBLoadGlobalControlArg *r = dynamic_cast<const DBLoadGlobalControlArg *>(&rhs);
			if (r && r != this)
			{
				nouse = r->nouse;
			}
			return *this;
		}

		DBLoadGlobalControlArg& operator = (const DBLoadGlobalControlArg &rhs)
		{
			const DBLoadGlobalControlArg *r = &rhs;
			if (r && r != this)
			{
				nouse = r->nouse;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << nouse;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> nouse;
			return os;
		}

	};
};
#endif
