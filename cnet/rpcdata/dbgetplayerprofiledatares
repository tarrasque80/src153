#ifndef __GNET_DBGETPLAYERPROFILEDATARES_RPCDATA
#define __GNET_DBGETPLAYERPROFILEDATARES_RPCDATA

#include "rpcdefs.h"

#include "playerprofiledata"

namespace GNET
{
	class DBGetPlayerProfileDataRes : public GNET::Rpc::Data
	{
	public:
		int retcode;
		unsigned char gender;
		PlayerProfileData data;

	public:
		DBGetPlayerProfileDataRes (int l_retcode = 0)
			: retcode(l_retcode)
		{
		}

		DBGetPlayerProfileDataRes(const DBGetPlayerProfileDataRes &rhs)
			: retcode(rhs.retcode),gender(rhs.gender),data(rhs.data) { }

		Rpc::Data *Clone() const { return new DBGetPlayerProfileDataRes(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const DBGetPlayerProfileDataRes *r = dynamic_cast<const DBGetPlayerProfileDataRes *>(&rhs);
			if (r && r != this)
			{
				retcode = r->retcode;
				gender = r->gender;
				data = r->data;
			}
			return *this;
		}

		DBGetPlayerProfileDataRes& operator = (const DBGetPlayerProfileDataRes &rhs)
		{
			const DBGetPlayerProfileDataRes *r = &rhs;
			if (r && r != this)
			{
				retcode = r->retcode;
				gender = r->gender;
				data = r->data;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << gender;
			os << data;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> gender;
			os >> data;
			return os;
		}

	};
};
#endif
