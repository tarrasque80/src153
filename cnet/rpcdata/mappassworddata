#ifndef __GNET_MAPPASSWORDDATA_RPCDATA
#define __GNET_MAPPASSWORDDATA_RPCDATA

#include "rpcdefs.h"

#include "mappasswordvalue"

namespace GNET
{
	class MapPasswordData : public GNET::Rpc::Data
	{
	public:
		Octets username;
		MapPasswordValue value;

	public:
		MapPasswordData (const Octets& l_username = Octets())
			: username(l_username)
		{
		}

		MapPasswordData(const MapPasswordData &rhs)
			: username(rhs.username),value(rhs.value) { }

		Rpc::Data *Clone() const { return new MapPasswordData(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const MapPasswordData *r = dynamic_cast<const MapPasswordData *>(&rhs);
			if (r && r != this)
			{
				username = r->username;
				value = r->value;
			}
			return *this;
		}

		MapPasswordData& operator = (const MapPasswordData &rhs)
		{
			const MapPasswordData *r = &rhs;
			if (r && r != this)
			{
				username = r->username;
				value = r->value;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << username;
			os << value;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> username;
			os >> value;
			return os;
		}

	};
};
#endif
