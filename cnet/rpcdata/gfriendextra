#ifndef __GNET_GFRIENDEXTRA_RPCDATA
#define __GNET_GFRIENDEXTRA_RPCDATA

#include "rpcdefs.h"

#include "gfriendextinfo"
#include "gsendaumailrecord"

namespace GNET
{
	class GFriendExtra : public GNET::Rpc::Data
	{
	public:
		GFriendExtInfoVector friendExtInfo;
		GSendAUMailRecordVector sendaumailinfo;
		Octets enemylistinfo;
		char reserved11;
		short reserved12;
		int reserved2;
		int reserved3;
		int reserved4;
		int reserved5;

	public:
		GFriendExtra (Octets l_enemylistinfo = Octets(),char l_reserved11 = 0,short l_reserved12 = 0
			,int l_reserved2 = 0,int l_reserved3 = 0,int l_reserved4 = 0
			,int l_reserved5 = 0)
			: enemylistinfo(l_enemylistinfo),reserved11(l_reserved11),reserved12(l_reserved12)
			,reserved2(l_reserved2),reserved3(l_reserved3),reserved4(l_reserved4)
			,reserved5(l_reserved5)
		{
		}

		GFriendExtra(const GFriendExtra &rhs)
			: friendExtInfo(rhs.friendExtInfo),sendaumailinfo(rhs.sendaumailinfo),enemylistinfo(rhs.enemylistinfo),
			reserved11(rhs.reserved11),reserved12(rhs.reserved12),reserved2(rhs.reserved2),
			reserved3(rhs.reserved3),reserved4(rhs.reserved4),reserved5(rhs.reserved5) { }

		Rpc::Data *Clone() const { return new GFriendExtra(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const GFriendExtra *r = dynamic_cast<const GFriendExtra *>(&rhs);
			if (r && r != this)
			{
				friendExtInfo = r->friendExtInfo;
				sendaumailinfo = r->sendaumailinfo;
				enemylistinfo = r->enemylistinfo;
				reserved11 = r->reserved11;
				reserved12 = r->reserved12;
				reserved2 = r->reserved2;
				reserved3 = r->reserved3;
				reserved4 = r->reserved4;
				reserved5 = r->reserved5;
			}
			return *this;
		}

		GFriendExtra& operator = (const GFriendExtra &rhs)
		{
			const GFriendExtra *r = &rhs;
			if (r && r != this)
			{
				friendExtInfo = r->friendExtInfo;
				sendaumailinfo = r->sendaumailinfo;
				enemylistinfo = r->enemylistinfo;
				reserved11 = r->reserved11;
				reserved12 = r->reserved12;
				reserved2 = r->reserved2;
				reserved3 = r->reserved3;
				reserved4 = r->reserved4;
				reserved5 = r->reserved5;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << friendExtInfo;
			os << sendaumailinfo;
			os << enemylistinfo;
			os << reserved11;
			os << reserved12;
			os << reserved2;
			os << reserved3;
			os << reserved4;
			os << reserved5;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> friendExtInfo;
			os >> sendaumailinfo;
			os >> enemylistinfo;
			os >> reserved11;
			os >> reserved12;
			os >> reserved2;
			os >> reserved3;
			os >> reserved4;
			os >> reserved5;
			return os;
		}

	};
};
#endif
