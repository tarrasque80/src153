#ifndef __GNET_GETUSERCOUPONRES_RPCDATA
#define __GNET_GETUSERCOUPONRES_RPCDATA

#include "rpcdefs.h"


namespace GNET
{
	class GetUserCouponRes : public GNET::Rpc::Data
	{
	public:
		int retcode;
		int remain_coupon;
		int today_exchange_coupon;
		int today_remain_coupon;
		int reserved1;
		int reserved2;

	public:
		GetUserCouponRes (int l_retcode = 0,int l_remain_coupon = 0,int l_today_exchange_coupon = 0
			,int l_today_remain_coupon = 0,int l_reserved1 = 0,int l_reserved2 = 0)
			: retcode(l_retcode),remain_coupon(l_remain_coupon),today_exchange_coupon(l_today_exchange_coupon)
			,today_remain_coupon(l_today_remain_coupon),reserved1(l_reserved1),reserved2(l_reserved2)
		{
		}

		GetUserCouponRes(const GetUserCouponRes &rhs)
			: retcode(rhs.retcode),remain_coupon(rhs.remain_coupon),today_exchange_coupon(rhs.today_exchange_coupon),
			today_remain_coupon(rhs.today_remain_coupon),reserved1(rhs.reserved1),reserved2(rhs.reserved2) { }

		Rpc::Data *Clone() const { return new GetUserCouponRes(*this); }

		Rpc::Data& operator = (const Rpc::Data &rhs)
		{
			const GetUserCouponRes *r = dynamic_cast<const GetUserCouponRes *>(&rhs);
			if (r && r != this)
			{
				retcode = r->retcode;
				remain_coupon = r->remain_coupon;
				today_exchange_coupon = r->today_exchange_coupon;
				today_remain_coupon = r->today_remain_coupon;
				reserved1 = r->reserved1;
				reserved2 = r->reserved2;
			}
			return *this;
		}

		GetUserCouponRes& operator = (const GetUserCouponRes &rhs)
		{
			const GetUserCouponRes *r = &rhs;
			if (r && r != this)
			{
				retcode = r->retcode;
				remain_coupon = r->remain_coupon;
				today_exchange_coupon = r->today_exchange_coupon;
				today_remain_coupon = r->today_remain_coupon;
				reserved1 = r->reserved1;
				reserved2 = r->reserved2;
			}
			return *this;
		}

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << remain_coupon;
			os << today_exchange_coupon;
			os << today_remain_coupon;
			os << reserved1;
			os << reserved2;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> remain_coupon;
			os >> today_exchange_coupon;
			os >> today_remain_coupon;
			os >> reserved1;
			os >> reserved2;
			return os;
		}

	};
};
#endif
