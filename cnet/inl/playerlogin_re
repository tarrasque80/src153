	public:
		int result;
		int roleid;
		int src_provider_id;
		unsigned int localsid;
		char flag;
		enum { PROTOCOL_TYPE = PROTOCOL_PLAYERLOGIN_RE };
	public:
		PlayerLogin_Re() { type = PROTOCOL_PLAYERLOGIN_RE; }
		PlayerLogin_Re(void*) : Protocol(PROTOCOL_PLAYERLOGIN_RE) { }
		PlayerLogin_Re (int l_result,int l_roleid,int l_src_provider_id = -1,
			unsigned int l_localsid = 0,char l_flag = 0)
			 : result(l_result),roleid(l_roleid),src_provider_id(l_src_provider_id)
			,localsid(l_localsid),flag(l_flag)
		{
			type = PROTOCOL_PLAYERLOGIN_RE;
		}

		PlayerLogin_Re(const PlayerLogin_Re &rhs)
			: Protocol(rhs),result(rhs.result),roleid(rhs.roleid),src_provider_id(rhs.src_provider_id)
			,localsid(rhs.localsid),flag(rhs.flag) { }

		GNET::Protocol *Clone() const { return new PlayerLogin_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << result;
			os << roleid;
			os << src_provider_id;
			os << localsid;
			os << flag;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> result;
			os >> roleid;
			os >> src_provider_id;
			os >> localsid;
			os >> flag;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
