	public:
		char is_central;
		enum { PROTOCOL_TYPE = PROTOCOL_ANNOUNCECENTRALDELIVERY };
	public:
		AnnounceCentralDelivery() { type = PROTOCOL_ANNOUNCECENTRALDELIVERY; }
		AnnounceCentralDelivery(void*) : Protocol(PROTOCOL_ANNOUNCECENTRALDELIVERY) { }
		AnnounceCentralDelivery (char l_is_central)
			 : is_central(l_is_central)
		{
			type = PROTOCOL_ANNOUNCECENTRALDELIVERY;
		}

		AnnounceCentralDelivery(const AnnounceCentralDelivery &rhs)
			: Protocol(rhs),is_central(rhs.is_central) { }

		GNET::Protocol *Clone() const { return new AnnounceCentralDelivery(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << is_central;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> is_central;
			return os;
		}

		int PriorPolicy( ) const { return 101; }

		bool SizePolicy(size_t size) const { return size <= 512; }
