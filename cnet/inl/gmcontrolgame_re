	public:
		int xid;
		int retcode;
		GMControlGameResVector resvector;
		enum { PROTOCOL_TYPE = PROTOCOL_GMCONTROLGAME_RE };
	public:
		GMControlGame_Re() { type = PROTOCOL_GMCONTROLGAME_RE; }
		GMControlGame_Re(void*) : Protocol(PROTOCOL_GMCONTROLGAME_RE) { }
		GMControlGame_Re (int l_xid,int l_retcode,GMControlGameResVector l_resvector)
			 : xid(l_xid),retcode(l_retcode),resvector(l_resvector)
		{
			type = PROTOCOL_GMCONTROLGAME_RE;
		}

		GMControlGame_Re(const GMControlGame_Re &rhs)
			: Protocol(rhs),xid(rhs.xid),retcode(rhs.retcode),resvector(rhs.resvector) { }

		GNET::Protocol *Clone() const { return new GMControlGame_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << xid;
			os << retcode;
			os << resvector;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> xid;
			os >> retcode;
			os >> resvector;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 4096; }
