	public:
		std::vector<GForceGlobalDataBrief> list;
		enum { PROTOCOL_TYPE = PROTOCOL_SYNCFORCEGLOBALDATA };
	public:
		SyncForceGlobalData() { type = PROTOCOL_SYNCFORCEGLOBALDATA; }
		SyncForceGlobalData(void*) : Protocol(PROTOCOL_SYNCFORCEGLOBALDATA) { }
		SyncForceGlobalData (const std::vector<GForceGlobalDataBrief>& l_list)
			 : list(l_list)
		{
			type = PROTOCOL_SYNCFORCEGLOBALDATA;
		}

		SyncForceGlobalData(const SyncForceGlobalData &rhs)
			: Protocol(rhs),list(rhs.list) { }

		GNET::Protocol *Clone() const { return new SyncForceGlobalData(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << list;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> list;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 8192; }
