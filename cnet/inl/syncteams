	public:
		TeamBeanVector teams;
		enum { PROTOCOL_TYPE = PROTOCOL_SYNCTEAMS };
	public:
		SyncTeams() { type = PROTOCOL_SYNCTEAMS; }
		SyncTeams(void*) : Protocol(PROTOCOL_SYNCTEAMS) { }
		SyncTeams (const TeamBeanVector& l_teams = TeamBeanVector())
			 : teams(l_teams)
		{
			type = PROTOCOL_SYNCTEAMS;
		}

		SyncTeams(const SyncTeams &rhs)
			: Protocol(rhs),teams(rhs.teams) { }

		GNET::Protocol *Clone() const { return new SyncTeams(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << teams;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> teams;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 1048576; }
