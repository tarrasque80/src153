	public:
		int roleid;
		int bonus;
		enum { PROTOCOL_TYPE = PROTOCOL_SENDREWARDADDBONUS };
	public:
		SendRewardAddBonus() { type = PROTOCOL_SENDREWARDADDBONUS; }
		SendRewardAddBonus(void*) : Protocol(PROTOCOL_SENDREWARDADDBONUS) { }
		SendRewardAddBonus (int l_roleid,int l_bonus = 0)
			 : roleid(l_roleid),bonus(l_bonus)
		{
			type = PROTOCOL_SENDREWARDADDBONUS;
		}

		SendRewardAddBonus(const SendRewardAddBonus &rhs)
			: Protocol(rhs),roleid(rhs.roleid),bonus(rhs.bonus) { }

		GNET::Protocol *Clone() const { return new SendRewardAddBonus(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << bonus;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> bonus;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
