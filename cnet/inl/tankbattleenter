	public:
		int roleid;
		int battle_id;
		int world_tag;
		int model;
		enum { PROTOCOL_TYPE = PROTOCOL_TANKBATTLEENTER };
	public:
		TankBattleEnter() { type = PROTOCOL_TANKBATTLEENTER; }
		TankBattleEnter(void*) : Protocol(PROTOCOL_TANKBATTLEENTER) { }
		TankBattleEnter (int l_roleid,int l_battle_id,int l_world_tag,
			int l_model)
			 : roleid(l_roleid),battle_id(l_battle_id),world_tag(l_world_tag)
			,model(l_model)
		{
			type = PROTOCOL_TANKBATTLEENTER;
		}

		TankBattleEnter(const TankBattleEnter &rhs)
			: Protocol(rhs),roleid(rhs.roleid),battle_id(rhs.battle_id),world_tag(rhs.world_tag)
			,model(rhs.model) { }

		GNET::Protocol *Clone() const { return new TankBattleEnter(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << battle_id;
			os << world_tag;
			os << model;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> battle_id;
			os >> world_tag;
			os >> model;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 64; }
