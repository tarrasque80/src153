#include "callid.hxx"

#ifdef WIN32
#include <winsock2.h>
#include "gnproto.h"
#include "gncompress.h"
#else
#include "protocol.h"
#include "binder.h"
#endif

namespace GNET
{

static GNET::Protocol::Type _state_GProviderClient[] = 
{
	PROTOCOL_ANNOUNCEPROVIDERID,
	PROTOCOL_PLAYERKICKOUT,
	PROTOCOL_PLAYERLOGIN,
	PROTOCOL_PLAYEROFFLINE,
	PROTOCOL_PLAYERSTATUSSYNC,
	PROTOCOL_PLAYERSTATUSANNOUNCE,
	PROTOCOL_GETTASKDATA_RE,
	PROTOCOL_SETTASKDATA_RE,
	PROTOCOL_ENTERWORLD,
	PROTOCOL_C2SGAMEDATASEND,
	PROTOCOL_PUBLICCHAT,
	PROTOCOL_GTRADESTART,
	PROTOCOL_GTRADEEND,
	PROTOCOL_SWITCHSERVERSTART,
	PROTOCOL_SWITCHSERVERCANCEL,
	PROTOCOL_ANNOUNCEGM,
	PROTOCOL_GMRESTARTSERVER,
	PROTOCOL_FACEMODIFY_RE,
	PROTOCOL_FACTIONBEGINSYNC,
	PROTOCOL_FACTIONENDSYNC,
	PROTOCOL_PLAYERFACTIONINFO_RE,
	PROTOCOL_GETPLAYERFACTIONRELATION_RE,
	PROTOCOL_FACTIONCONGREGATEREQUEST,
	PROTOCOL_GMAILENDSYNC,
	PROTOCOL_QUERYREWARDTYPE_RE,
	PROTOCOL_QUERYGAMESERVERATTR_RE,
	PROTOCOL_ACREPORTCHEATER,
	RPC_DBSELLPOINT,
	RPC_DBBUYPOINT,
	PROTOCOL_GMCONTROLGAME,
	PROTOCOL_BATTLESTART,
	RPC_BATTLEEND,
	PROTOCOL_BATTLEENTERNOTICE,
	PROTOCOL_BATTLEMAPNOTICE,
	PROTOCOL_ADDICTIONCONTROL,
	RPC_PUTSPOUSE,
	PROTOCOL_ONDIVORCE,
	PROTOCOL_BILLINGREQUEST,
	PROTOCOL_BILLINGBALANCE,
	PROTOCOL_BILLINGBALANCESA_RE,
	PROTOCOL_BILLINGCONFIRM_RE,
	PROTOCOL_SENDREFADDBONUS,
	PROTOCOL_SENDREWARDADDBONUS,
	PROTOCOL_REFGETREFERENCECODE,
	PROTOCOL_PRIVATECHAT,
	PROTOCOL_FACTIONCHAT,
	RPC_SYSAUCTIONPREPAREITEM,
	RPC_GETFACTIONFORTRESS,
	RPC_PUTFACTIONFORTRESS,
	PROTOCOL_NOTIFYFACTIONFORTRESSINFO2,
	PROTOCOL_FACTIONFORTRESSENTERNOTICE,
	PROTOCOL_ADDCASHNOTIFY,
	PROTOCOL_SYNCFORCEGLOBALDATA,
	PROTOCOL_AUMAILSENDED,
	PROTOCOL_COUNTRYBATTLEAPPLY_RE,
	PROTOCOL_COUNTRYBATTLECONFIGNOTIFY,
	PROTOCOL_COUNTRYBATTLESTART,
	PROTOCOL_COUNTRYBATTLEENTER,
	PROTOCOL_COUNTRYBATTLESYNCPLAYERPOS,
	PROTOCOL_COUNTRYBATTLEDESTROYINSTANCE,
	PROTOCOL_SSOGETTICKET,
	PROTOCOL_PLAYERENTERLEAVEGT,
	PROTOCOL_AUTOLOCKCHANGED,
	PROTOCOL_PLAYERCHANGEDS,
	PROTOCOL_CASHMONEYEXCHANGENOTIFY,
	PROTOCOL_SERVERFORBIDNOTIFY,
	PROTOCOL_SERVERTRIGGERNOTIFY,
	PROTOCOL_PLAYERRENAME_RE,
	RPC_DBPLAYERCHANGEGENDER,
	PROTOCOL_FACTIONRENAMEGSVERIFY,
	PROTOCOL_KEKINGNOTIFY,
	PROTOCOL_TOUCHPOINTQUERY_RE,
	PROTOCOL_TOUCHPOINTCOST_RE,
	PROTOCOL_AUADDUPMONEYQUERY_RE,
	PROTOCOL_GIFTCODEREDEEM_RE,
	PROTOCOL_UNIQUEDATAMODIFYNOTICE,
	PROTOCOL_UNIQUEDATASYNCH,
	PROTOCOL_TANKBATTLEENTER,
	PROTOCOL_TANKBATTLESTART,
	PROTOCOL_AUTOTEAMPLAYERREADY,
	PROTOCOL_AUTOTEAMCOMPOSESTART,
	PROTOCOL_AUTOTEAMCOMPOSEFAILED,
	PROTOCOL_FACTIONRESOURCEBATTLEREQUESTCONFIG,
	PROTOCOL_FACTIONRESOURCEBATTLESTATUSNOTICE,
	PROTOCOL_MNDOMAINBATTLESTART,
	PROTOCOL_MNDOMAINBATTLEENTER_RE,
	PROTOCOL_MNDOMAININFOGSNOTICE,
};

GNET::Protocol::Manager::Session::State state_GProviderClient(_state_GProviderClient,
						sizeof(_state_GProviderClient)/sizeof(GNET::Protocol::Type), 86400);


};

