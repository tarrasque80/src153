
#ifndef __GNET_ANNOUNCEFACTIONROLEDEL_HPP
#define __GNET_ANNOUNCEFACTIONROLEDEL_HPP

#include "rpcdefs.h"
#include "callid.hxx"
#include "state.hxx"
#include "factiondb.h"

#include "announcefactionroledelarg"
#include "announcefactionroledelres"

namespace GNET
{

class AnnounceFactionRoleDel : public Rpc
{
#define	RPC_BASECLASS	Rpc
	#include "announcefactionroledel"
#undef	RPC_BASECLASS

	void Server(Rpc::Data *argument, Rpc::Data *result, Manager *manager, Manager::Session::ID sid)
	{
		AnnounceFactionRoleDelArg *arg = (AnnounceFactionRoleDelArg *)argument;
		AnnounceFactionRoleDelRes *res = (AnnounceFactionRoleDelRes *)result;
		Factiondb::GetInstance()->OnDeleteRole(arg->faction, arg->roleid);
		res->retcode = ERR_SUCCESS;
	}

	void Client(Rpc::Data *argument, Rpc::Data *result, Manager *manager, Manager::Session::ID sid)
	{
		// TODO
		// AnnounceFactionRoleDelArg *arg = (AnnounceFactionRoleDelArg *)argument;
		// AnnounceFactionRoleDelRes *res = (AnnounceFactionRoleDelRes *)result;
	}

	void OnTimeout()
	{
		// TODO Client Only
	}

};

};
#endif
